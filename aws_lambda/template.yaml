AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  whats_up_check

  Sample SAM Template for whats_up_check

Globals:
  Function:
    Timeout: 10
    Runtime: python3.10
    Architectures:
      - x86_64
    Environment:
      Variables:
        SNS_TOPIC: !Ref WhatsUpTopic
        DYNAMO_TABLE: !Ref WhatsUpTable
    Handler: app.lambda_handler
    ReservedConcurrentExecutions: 2
  Api:
    Cors:
      AllowMethods: "'POST, GET'"
      AllowOrigin: "'*'"

Resources:
  TriggerHealthCheckFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: triggerhealthchecks/
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref WhatsUpTable
        - Version: "2012-10-17"
          Statement:
            - Action:
                - "logs:CreateLogGroup"
                - "logs:CreateLogStream"
                - "logs:PutLogEvents"
              Effect: Allow
              Resource: "arn:aws:logs:*:*:*"
            - Action:
                - "SNS:Publish"
              Effect: Allow
              Resource: !Ref WhatsUpTopic

      Events:
        TriggerHealthCheck:
          Type: Api
          Properties:
            Method: post
            Path: /up

  HealthCheckFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: healthcheck/
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref WhatsUpTable
        - Version: "2012-10-17"
          Statement:
            - Action:
                - "logs:CreateLogGroup"
                - "logs:CreateLogStream"
                - "logs:PutLogEvents"
              Effect: Allow
              Resource: "arn:aws:logs:*:*:*"
      Events:
        SNSTrigger:
          Type: SNS
          Properties:
            Topic:
              Ref: WhatsUpTopic

  HealthStatusFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: healthstatus/
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref WhatsUpTable
        - Version: "2012-10-17"
          Statement:
            - Action:
                - "logs:CreateLogGroup"
                - "logs:CreateLogStream"
                - "logs:PutLogEvents"
              Effect: Allow
              Resource: "arn:aws:logs:*:*:*"
      Events:
        HealthStatus:
          Type: Api
          Properties:
            Method: get
            Path: /status

  WhatsUpTopic:
    Type: AWS::SNS::Topic

  WhatsUpTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: WhatsUpTable
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

Outputs:
  HealthCheckApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/health/"
  HealthCheckFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HealthCheckFunction.Arn
  HealthCheckFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HealthCheckFunctionRole.Arn
  StacksRegion:
    Description: "The AWS region in which the stack has been deployed"
    Value: !Ref AWS::Region

  WhatsUpTopic:
    Description: "SNS topic to which health check functions are subscribed"
    Value: !Ref WhatsUpTopic
    Export:
      Name: WhatsUpTopic
